{"version":3,"sources":["services/getAnswers.js","services/getToken.js","redux/actions/index.js","pages/Login.js","pages/Settings.js","components/BtnRanking.js","components/Header.js","pages/Questions.js","components/BtnHome.js","pages/Ranking.js","pages/Feedback.js","App.js","redux/reducers/player.js","redux/reducers/token.js","redux/reducers/questions.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["token","a","getTokenURL","fetch","response","json","data","getAnswers","getToken","successToken","type","failedToken","error","thunkGetToken","dispatch","Login","handleDisable","state","username","email","length","test","handleClick","props","thunkGetSaveTokenDispatch","history","loginSucess","push","className","htmlFor","id","data-testid","onChange","event","setState","target","value","disabled","this","onClick","to","Component","connect","name","gravatarEmail","Settings","BtnRanking","Header","score","emailCrypto","md5","toString","src","alt","player","Questions","scoreBoard","question","timer","difficulty","myScore","getScoreDispatch","questions","allCorrect","valueDifficulty","index","correct_answer","myTimer","countdown","setInterval","buttonDisabledTimer","clearInterval","colorBorder","btnNext","console","log","handleNextQuestion","questionsRender","incorrect","incorrect_answers","correct","allAnswers","loading","thunkGetSaveQuestionsDispatch","category","map","answer","indexOf","key","some","element","thunkGetTokenDispatch","tokenForRequest","dataResults","results","getScore","BtnHome","Ranking","Feedback","saveScore","importScore","localStorage","setItem","JSON","parse","assertions","message","col","App","exact","path","component","initialState","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.b895453e.chunk.js","sourcesContent":["async function getAnswers(token) {\n  try {\n    const getTokenURL = `https://opentdb.com/api.php?amount=5&token=${token}`;\n    const response = await fetch(getTokenURL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport default getAnswers;\n","const getTokenURL = 'https://opentdb.com/api_token.php?command=request';\n\nconst getToken = async () => {\n  const response = await fetch(getTokenURL);\n  const data = await response.json();\n  return data;\n};\n\nexport default getToken;\n","import getAnswers from '../../services/getAnswers';\nimport getToken from '../../services/getToken';\n\nexport const SUCCESS = 'SUCCESS';\nexport const REQUEST = 'REQUEST';\nexport const ERROR = 'ERROR';\nexport const SUCCESS_QUESTIONS = 'SUCCESS_QUESTIONS';\nexport const GET_SCORE = 'GET_SCORE';\n\nexport const requestToken = () => ({\n  type: 'REQUEST',\n});\n\nexport const successToken = (data) => ({\n  type: 'SUCCESS',\n  data,\n});\n\nexport const failedToken = (error) => ({\n  type: 'ERROR',\n  error,\n});\n\nexport const loginHeader = (name, gravatarEmail) => ({\n  type: 'LOGIN',\n  name,\n  gravatarEmail,\n});\n\nexport const successQuestion = (questions) => ({\n  type: 'SUCCESS_QUESTIONS',\n  questions,\n});\n\nexport const getScore = (score) => ({\n  type: 'GET_SCORE',\n  score,\n  // assertions,\n});\n\nexport const thunkGetToken = () => async (dispatch) => {\n  dispatch(requestToken());\n  try {\n    const data = await getToken();\n    dispatch(successToken(data));\n  } catch (error) {\n    dispatch(failedToken(error));\n  }\n};\n\nexport const thunkGetQuestion = () => async (dispatch) => {\n  dispatch(requestToken());\n  try {\n    const tokenForRequest = await getToken();\n    const dataResults = await getAnswers(tokenForRequest.token);\n    dispatch(successQuestion(dataResults.results));\n  } catch (error) {\n    dispatch(failedToken(error));\n  }\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport '../css/login.css';\nimport { loginHeader, thunkGetToken } from '../redux/actions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      email: '',\n    };\n  }\n\n  handleDisable = () => {\n    const { username, email } = this.state;\n    const validEmail = /\\w+@\\w+\\.\\S+/g;\n    return !(username.length && validEmail.test(email));\n  }\n\n  handleClick = async () => {\n    const { thunkGetSaveTokenDispatch,\n      history, loginSucess } = this.props;\n    const { username, email } = this.state;\n    await thunkGetSaveTokenDispatch();\n    // retirei essa chamada de função abaixo do onclick\n    loginSucess(username, email);\n    history.push('/questions');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container-login col\">\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              id=\"username\"\n              type=\"text\"\n              data-testid=\"input-player-name\"\n              onChange={ (event) => this.setState({ username: event.target.value }) }\n            />\n          </label>\n          <label htmlFor=\"email\">\n            Email:\n            <input\n              id=\"email\"\n              type=\"email\"\n              data-testid=\"input-gravatar-email\"\n              onChange={ (event) => this.setState({ email: event.target.value }) }\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ this.handleDisable() }\n            onClick={ this.handleClick }\n          >\n            Play\n          </button>\n          <Link\n            data-testid=\"btn-settings\"\n            to=\"/settings\"\n          >\n            Configuraçôes\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  thunkGetSaveTokenDispatch: () => dispatch(thunkGetToken()),\n  loginSucess: (username, email) => dispatch(loginHeader(username, email)),\n});\n\nLogin.propTypes = {\n  thunkGetSaveTokenDispatch: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  loginSucess: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport '../css/settings.css';\n\nclass Settings extends Component {\n  render() {\n    return (\n      <div className=\"container-page\">\n        <div className=\"container-settings col\">\n          <h1 data-testid=\"settings-title\">Configurações</h1>\n          <label htmlFor=\"category\">\n            Categoria\n            <select id=\"category\">\n              <option>option1</option>\n              <option>option2</option>\n              <option>option3</option>\n            </select>\n          </label>\n          <label htmlFor=\"dificulty\">\n            Dificuldade\n            <select id=\"dificulty\">\n              <option>option1</option>\n              <option>option2</option>\n              <option>option3</option>\n            </select>\n          </label>\n          <label htmlFor=\"type\">\n            Tipo\n            <select id=\"type\">\n              <option>option1</option>\n              <option>option2</option>\n              <option>option3</option>\n            </select>\n          </label>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass BtnRanking extends Component {\n  render() {\n    return (\n      <div>\n        <Link\n          to=\"/ranking\"\n        >\n          <button\n            type=\"submit\"\n            data-testid=\"btn-ranking\"\n          >\n            Ranking\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default BtnRanking;\n","import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../css/header.css';\n\nclass Header extends Component {\n  render() {\n    const { email, name, score } = this.props;\n    const emailCrypto = md5(email).toString();\n    return (\n      <div className=\"header-container row\">\n        <img src={ `https://www.gravatar.com/avatar/${emailCrypto}` } alt={ name } data-testid=\"header-profile-picture\" />\n        {/* transformei o P do player em SPAN */}\n        <div className=\"header-container-text row\">\n          <p>\n            Jogador :\n            {' '}\n            <span data-testid=\"header-player-name\">{name}</span>\n          </p>\n          <p>\n            Pontos :\n            {' '}\n            <span data-testid=\"header-score\">{score}</span>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BtnRanking from '../components/BtnRanking';\nimport Header from '../components/Header';\n// import './Questions.css';\nimport '../css/questions.css';\nimport { getScore, thunkGetQuestion, thunkGetToken } from '../redux/actions';\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // typeQuestion: '',\n      // category: '',\n      // dificult: '',\n      // correctAnswer: '',\n      // incorrectAnswer: [],\n      index: 0,\n      colorBorder: false,\n      btnNext: false,\n      loading: true,\n      timer: 30,\n      allCorrect: 0,\n      buttonDisabledTimer: false,\n      allAnswers: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { token, thunkGetSaveQuestionsDispatch } = this.props;\n    await thunkGetSaveQuestionsDispatch(token);\n    this.setState({\n      // typeQuestion: questions[0].type,\n      // category: questions[0].category,\n      // dificult: questions[0].difficulty,\n      // correctAnswer: questions[0].correct_answer,\n      // incorrectAnswer: questions[0].incorrect_answers,\n      loading: false,\n    });\n    this.myTimer();\n    this.questionsRender();\n  }\n\n  scoreBoard = (question, timer, difficulty) => {\n    const { myScore, getScoreDispatch, questions } = this.props;\n    const { allCorrect, index } = this.state;\n    const correct = questions[index].correct_answer;\n    const valueMax = 3;\n    const pointsAdd = 10;\n    let valueDifficulty = 0;\n    if (difficulty === 'easy') valueDifficulty = 1;\n    if (difficulty === 'medium') valueDifficulty = 2;\n    if (difficulty === 'hard') valueDifficulty = valueMax;\n    if (question === correct) {\n      getScoreDispatch(myScore + pointsAdd + (timer * valueDifficulty), allCorrect + 1);\n      // answerCorrect(allCorrect + 1);\n    }\n  }\n\n  myTimer = async () => {\n    const interval = 1000;\n    const countdown = setInterval(() => {\n      const { timer } = this.state;\n      this.setState({\n        timer: timer - 1,\n      });\n      if (timer === 1) {\n        this.setState({\n          buttonDisabledTimer: true,\n        });\n        clearInterval(countdown);\n      }\n    }, interval);\n  };\n\n  handleClick = ({ target }) => {\n    // const { questions } = this.props;\n    // const { index, timer } = this.state;\n    // const level = questions[index].difficulty;\n    this.setState({\n      colorBorder: true,\n      btnNext: true,\n      // sortIndex: false,\n    });\n    // this.scoreBoard(value, timer, level);\n    console.log(target.value);\n  }\n\n  handleNextQuestion = () => {\n    const { questions, history } = this.props;\n    const { index } = this.state;\n    this.setState({\n      index: index + 1,\n      colorBorder: false,\n      // sortIndex: true,\n    });\n    if (questions.length - 1 === index) {\n      history.push('/feedback');\n    }\n    this.questionsRender();\n  }\n\n  questionsRender = () => {\n    const { questions } = this.props;\n    const { index } = this.state;\n    const incorrect = questions[index].incorrect_answers;\n    const correct = questions[index].correct_answer;\n    this.setState({\n      allAnswers: [...incorrect, correct],\n      index: index + 1,\n    });\n  }\n\n  render() {\n    const { questions } = this.props;\n    const { index, colorBorder,\n      btnNext, loading, timer, buttonDisabledTimer, allAnswers } = this.state;\n    /*     let allAnswers = [];\n    allAnswers.push(correctAnswer, ...incorrectAnswer);\n    let question;\n    if (questions) {\n      question = questions[index];\n      const mg = 0.5;\n      if (sortIndex) {\n        allAnswers = [question.correct_answer, ...question\n          .incorrect_answers].sort(() => Math.random() - mg);\n      }\n    } */\n\n    return (\n      <div className=\"container-page\">\n        <Header />\n        {loading ? <h1>Carregando...</h1>\n          : (\n            <div className=\"container-questions-aswers row\">\n              <span>{timer}</span>\n              <div className=\"container-question col\">\n                {/* troquei o elemento da categoria de p para h2 */}\n                <h2 className=\"col\" data-testid=\"question-category\">\n                  { questions[index].category }\n                </h2>\n                <p data-testid=\"question-text\">\n                  { questions[index].question }\n                </p>\n              </div>\n              <div className=\"container-aswers col\" data-testid=\"answer-options\">\n                {allAnswers.map((answer, indexOf) => (\n                  <button\n                    type=\"button\"\n                    disabled={ buttonDisabledTimer }\n                    key={ indexOf }\n                    className={ colorBorder && (\n                      questions\n                        .some((element) => element.correct_answer === answer)\n                        ? 'green' : 'red') }\n                    onClick={ this.handleClick }\n                    data-testid={ questions\n                      .some((element) => element\n                        .correct_answer === answer) ? 'correct-answer' : 'wrong-answer' }\n                  >\n                    {answer}\n                  </button>\n                ))}\n              </div>\n              <div className=\"container-buttons col\">\n                <BtnRanking />\n                <button\n                  type=\"button\"\n                  className={ btnNext ? 'btn-next' : 'btn-next-disabled' }\n                  disabled={ !btnNext }\n                  onClick={ this.handleNextQuestion }\n                  data-testid=\"btn-next\"\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.token,\n  questions: state.questions,\n  myScore: state.player.score,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  thunkGetTokenDispatch: () => dispatch(thunkGetToken()),\n  thunkGetSaveQuestionsDispatch: (questions) => dispatch(thunkGetQuestion(questions)),\n  getScoreDispatch: (score) => dispatch(getScore(score)),\n  // answerCorrect: (allCorrect) => dispatch(allCorrect),\n});\n\nQuestions.propTypes = {\n  thunkGetSaveQuestionsDispatch: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n  questions: PropTypes.arrayOf(PropTypes.any).isRequired,\n  category: PropTypes.string.isRequired,\n  // difficulty: PropTypes.string.isRequired,\n  getScoreDispatch: PropTypes.func.isRequired,\n  // answerCorrect: PropTypes.func.isRequired,\n  myScore: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass BtnHome extends Component {\n  render() {\n    return (\n      <div>\n        <Link\n          to=\"/\"\n        >\n          <button\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n          >\n            Home\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default BtnHome;\n","import React, { Component } from 'react';\nimport BtnHome from '../components/BtnHome';\nimport '../css/ranking.css';\n\nclass Ranking extends Component {\n  render() {\n    return (\n      <div className=\"container-page-ranking col\">\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        <div className=\"container-ranking col\">\n          <div className=\"player row\">\n            <img src=\"\" alt=\"img\" />\n            <p>Fulano 10 pontos</p>\n          </div>\n          <div className=\"player row\">\n            <img src=\"\" alt=\"img\" />\n            <p>Cicrano 10 pontos</p>\n          </div>\n          <div className=\"player row\">\n            <img src=\"\" alt=\"img\" />\n            <p>Beltrano 10 pontos</p>\n          </div>\n        </div>\n        <BtnHome />\n      </div>\n    );\n  }\n}\n\nexport default Ranking;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BtnRanking from '../components/BtnRanking';\nimport Header from '../components/Header';\nimport '../css/feedback.css';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    this.saveScore();\n  }\n\nsaveScore = () => {\n  const { importScore } = this.props;\n  // const obj = {\n  //   score: importScore,\n  //   assertions,\n  // };\n  const element = localStorage.setItem('score', JSON.parse(importScore));\n  return element;\n}\n\nrender() {\n  const { importScore, assertions } = this.props;\n  const minimumScore = 3;\n  const message = importScore >= minimumScore ? 'Well Done!' : 'Could be better...';\n  return (\n    <div className=\"container-page\">\n      <header>\n        <Header />\n      </header>\n      <div className=\"message-container\" col>\n        <h2 data-testid=\"feedback-text\">{message}</h2>\n        <p data-testid=\"feedback-total-score\">\n          Você acertou\n          {' '}\n          {importScore}\n          {' '}\n          questões!\n        </p>\n        <p data-testid=\"feedback-total-question\">\n          Um total de\n          {' '}\n          {assertions}\n          {' '}\n          pontos\n        </p>\n      </div>\n      <BtnRanking />\n    </div>\n  );\n}\n}\n\nconst mapStateToProps = (state) => ({\n  importScore: state.player.score,\n  assertions: state.player.assertions,\n});\n\nFeedback.propTypes = {\n  importScore: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Feedback);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Questions from './pages/Questions';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/feedback\" component={ Feedback } />\n      <Route exact path=\"/questions\" component={ Questions } />\n      <Route exact path=\"/settings\" component={ Settings } />\n      <Route exact path=\"/ranking\" component={ Ranking } />\n      <Route exact path=\"/\" component={ Login } />\n    </Switch>\n  );\n}\n\nexport default App;\n","const initialState = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = initialState, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return {\n      ...state,\n      name: action.name,\n      gravatarEmail: action.gravatarEmail,\n    };\n  case 'GET_SCORE':\n    return {\n      ...state,\n      score: action.score,\n      // assertions: action.assertions,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { ERROR, SUCCESS } from '../actions';\n\nconst initialState = '';\n\nconst token = (state = initialState, action) => {\n  switch (action.type) {\n  case SUCCESS:\n    return action.data.token;\n\n  case ERROR:\n    return {\n      ...state,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default token;\n","import { ERROR, SUCCESS_QUESTIONS } from '../actions';\n\nconst initialState = [{\n  type: '',\n  difficulty: '',\n  category: '',\n  question: '',\n  correct_answer: '',\n  incorrect_answers: [],\n}];\n\nconst questions = (state = initialState, action) => {\n  switch (action.type) {\n  case SUCCESS_QUESTIONS:\n    return action.questions;\n\n  case ERROR:\n    return {\n      ...state,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default questions;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport token from './token';\nimport questions from './questions';\n\nconst rootReducer = combineReducers({ player, token, questions });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL }>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}